<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
        "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: unnamed Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <script type="text/ecmascript"><![CDATA[
/**
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the
 * first g-element), including the library into any SVG adds the following
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.2, Tue Aug 30 17:21:56 CEST 2011, Andrea Leofreddi
 *	- Fixed viewBox on root tag (#7)
 *	- Improved zoom speed (#2)
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2017 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived from
 *       this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ''AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION

var root = document.documentElement;

var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);

	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg"
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 403)">
    <title>unnamed</title>
    <polygon fill="white" stroke="transparent" points="-4,4 -4,-403 675.16,-403 675.16,4 -4,4"/>
    <g id="clust1" class="cluster">
        <title>cluster_L</title>
        <polygon fill="none" stroke="black" points="8,-303 8,-391 424,-391 424,-303 8,-303"/>
    </g>
    <!-- Type: cpu -->
    <g id="node1" class="node">
        <title>Type: cpu</title>
        <polygon fill="#f8f8f8" stroke="black" points="415.52,-383 16.48,-383 16.48,-311 415.52,-311 415.52,-383"/>
        <text text-anchor="start" x="24.24" y="-366.2" font-family="Times,serif" font-size="16.00">Type: cpu</text>
        <text text-anchor="start" x="24.24" y="-350.2" font-family="Times,serif" font-size="16.00">Time: Jan 18, 2020 at 6:09pm (CST)</text>
        <text text-anchor="start" x="24.24" y="-334.2" font-family="Times,serif" font-size="16.00">Duration: 711.70ms, Total samples = 550ms (77.28%)</text>
        <text text-anchor="start" x="24.24" y="-318.2" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 550ms, 100% of 550ms total</text>
    </g>
    <!-- N1 -->
    <g id="node1" class="node">
        <title>N1</title>
        <g id="a_node1"><a xlink:title="test/entry.BenchmarkTrangle (540ms)">
            <polygon fill="#edd5d5" stroke="#b20000" points="576.42,-171 375.58,-171 375.58,-91 576.42,-91 576.42,-171"/>
            <text text-anchor="middle" x="476" y="-147.8" font-family="Times,serif" font-size="24.00">entry</text>
            <text text-anchor="middle" x="476" y="-123.8" font-family="Times,serif" font-size="24.00">BenchmarkTrangle</text>
            <text text-anchor="middle" x="476" y="-99.8" font-family="Times,serif" font-size="24.00">540ms (98.18%)</text>
        </a>
        </g>
    </g>
    <!-- N2 -->
    <g id="node2" class="node">
        <title>N2</title>
        <g id="a_node2"><a xlink:title="testing.(*B).launch (540ms)">
            <polygon fill="#edd5d5" stroke="#b20000" points="517.99,-367 434.01,-367 434.01,-327 517.99,-327 517.99,-367"/>
            <text text-anchor="middle" x="476" y="-356.6" font-family="Times,serif" font-size="8.00">testing</text>
            <text text-anchor="middle" x="476" y="-348.6" font-family="Times,serif" font-size="8.00">(*B)</text>
            <text text-anchor="middle" x="476" y="-340.6" font-family="Times,serif" font-size="8.00">launch</text>
            <text text-anchor="middle" x="476" y="-332.6" font-family="Times,serif" font-size="8.00">0 of 540ms (98.18%)</text>
        </a>
        </g>
    </g>
    <!-- N7 -->
    <g id="node7" class="node">
        <title>N7</title>
        <g id="a_node7"><a xlink:title="testing.(*B).runN (540ms)">
            <polygon fill="#edd5d5" stroke="#b20000" points="517.99,-261 434.01,-261 434.01,-221 517.99,-221 517.99,-261"/>
            <text text-anchor="middle" x="476" y="-250.6" font-family="Times,serif" font-size="8.00">testing</text>
            <text text-anchor="middle" x="476" y="-242.6" font-family="Times,serif" font-size="8.00">(*B)</text>
            <text text-anchor="middle" x="476" y="-234.6" font-family="Times,serif" font-size="8.00">runN</text>
            <text text-anchor="middle" x="476" y="-226.6" font-family="Times,serif" font-size="8.00">0 of 540ms (98.18%)</text>
        </a>
        </g>
    </g>
    <!-- N2&#45;&gt;N7 -->
    <g id="edge1" class="edge">
        <title>N2&#45;&gt;N7</title>
        <g id="a_edge1"><a xlink:title="testing.(*B).launch &#45;&gt; testing.(*B).runN (540ms)">
            <path fill="none" stroke="#b20000" stroke-width="5" d="M476,-326.92C476,-311.41 476,-289.25 476,-271.46"/>
            <polygon fill="#b20000" stroke="#b20000" stroke-width="5" points="480.38,-271.31 476,-261.31 471.63,-271.31 480.38,-271.31"/>
        </a>
        </g>
        <g id="a_edge1&#45;label"><a xlink:title="testing.(*B).launch &#45;&gt; testing.(*B).runN (540ms)">
            <text text-anchor="middle" x="496.42" y="-281.8" font-family="Times,serif" font-size="14.00"> 540ms</text>
        </a>
        </g>
    </g>
    <!-- N3 -->
    <g id="node3" class="node">
        <title>N3</title>
        <g id="a_node3"><a xlink:title="runtime.nanotime (10ms)">
            <polygon fill="#edecea" stroke="#b2ada2" points="671.33,-41 592.67,-41 592.67,0 671.33,0 671.33,-41"/>
            <text text-anchor="middle" x="632" y="-28.2" font-family="Times,serif" font-size="11.00">runtime</text>
            <text text-anchor="middle" x="632" y="-17.2" font-family="Times,serif" font-size="11.00">nanotime</text>
            <text text-anchor="middle" x="632" y="-6.2" font-family="Times,serif" font-size="11.00">10ms (1.82%)</text>
        </a>
        </g>
    </g>
    <!-- N4 -->
    <g id="node4" class="node">
        <title>N4</title>
        <g id="a_node4"><a xlink:title="runtime.mstart (10ms)">
            <polygon fill="#edecea" stroke="#b2ada2" points="669.99,-365 594.01,-365 594.01,-329 669.99,-329 669.99,-365"/>
            <text text-anchor="middle" x="632" y="-352.6" font-family="Times,serif" font-size="8.00">runtime</text>
            <text text-anchor="middle" x="632" y="-344.6" font-family="Times,serif" font-size="8.00">mstart</text>
            <text text-anchor="middle" x="632" y="-336.6" font-family="Times,serif" font-size="8.00">0 of 10ms (1.82%)</text>
        </a>
        </g>
    </g>
    <!-- N5 -->
    <g id="node5" class="node">
        <title>N5</title>
        <g id="a_node5"><a xlink:title="runtime.mstart1 (10ms)">
            <polygon fill="#edecea" stroke="#b2ada2" points="669.99,-259 594.01,-259 594.01,-223 669.99,-223 669.99,-259"/>
            <text text-anchor="middle" x="632" y="-246.6" font-family="Times,serif" font-size="8.00">runtime</text>
            <text text-anchor="middle" x="632" y="-238.6" font-family="Times,serif" font-size="8.00">mstart1</text>
            <text text-anchor="middle" x="632" y="-230.6" font-family="Times,serif" font-size="8.00">0 of 10ms (1.82%)</text>
        </a>
        </g>
    </g>
    <!-- N4&#45;&gt;N5 -->
    <g id="edge3" class="edge">
        <title>N4&#45;&gt;N5</title>
        <g id="a_edge3"><a xlink:title="runtime.mstart &#45;&gt; runtime.mstart1 (10ms)">
            <path fill="none" stroke="#b2ada2" d="M632,-328.83C632,-312.64 632,-288.13 632,-269.27"/>
            <polygon fill="#b2ada2" stroke="#b2ada2" points="635.5,-269.2 632,-259.2 628.5,-269.2 635.5,-269.2"/>
        </a>
        </g>
        <g id="a_edge3&#45;label"><a xlink:title="runtime.mstart &#45;&gt; runtime.mstart1 (10ms)">
            <text text-anchor="middle" x="648.92" y="-281.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
        </a>
        </g>
    </g>
    <!-- N6 -->
    <g id="node6" class="node">
        <title>N6</title>
        <g id="a_node6"><a xlink:title="runtime.sysmon (10ms)">
            <polygon fill="#edecea" stroke="#b2ada2" points="669.99,-149 594.01,-149 594.01,-113 669.99,-113 669.99,-149"/>
            <text text-anchor="middle" x="632" y="-136.6" font-family="Times,serif" font-size="8.00">runtime</text>
            <text text-anchor="middle" x="632" y="-128.6" font-family="Times,serif" font-size="8.00">sysmon</text>
            <text text-anchor="middle" x="632" y="-120.6" font-family="Times,serif" font-size="8.00">0 of 10ms (1.82%)</text>
        </a>
        </g>
    </g>
    <!-- N5&#45;&gt;N6 -->
    <g id="edge4" class="edge">
        <title>N5&#45;&gt;N6</title>
        <g id="a_edge4"><a xlink:title="runtime.mstart1 &#45;&gt; runtime.sysmon (10ms)">
            <path fill="none" stroke="#b2ada2" d="M632,-222.65C632,-205.56 632,-179.22 632,-159.32"/>
            <polygon fill="#b2ada2" stroke="#b2ada2" points="635.5,-159.31 632,-149.31 628.5,-159.31 635.5,-159.31"/>
        </a>
        </g>
        <g id="a_edge4&#45;label"><a xlink:title="runtime.mstart1 &#45;&gt; runtime.sysmon (10ms)">
            <text text-anchor="middle" x="648.92" y="-191.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
        </a>
        </g>
    </g>
    <!-- N6&#45;&gt;N3 -->
    <g id="edge5" class="edge">
        <title>N6&#45;&gt;N3</title>
        <g id="a_edge5"><a xlink:title="runtime.sysmon &#45;&gt; runtime.nanotime (10ms)">
            <path fill="none" stroke="#b2ada2" d="M632,-112.57C632,-96.01 632,-70.8 632,-51.1"/>
            <polygon fill="#b2ada2" stroke="#b2ada2" points="635.5,-51.09 632,-41.09 628.5,-51.09 635.5,-51.09"/>
        </a>
        </g>
        <g id="a_edge5&#45;label"><a xlink:title="runtime.sysmon &#45;&gt; runtime.nanotime (10ms)">
            <text text-anchor="middle" x="648.92" y="-61.8" font-family="Times,serif" font-size="14.00"> 10ms</text>
        </a>
        </g>
    </g>
    <!-- N7&#45;&gt;N1 -->
    <g id="edge2" class="edge">
        <title>N7&#45;&gt;N1</title>
        <g id="a_edge2"><a xlink:title="testing.(*B).runN &#45;&gt; test/entry.BenchmarkTrangle (540ms)">
            <path fill="none" stroke="#b20000" stroke-width="5" d="M476,-220.94C476,-209.93 476,-195.52 476,-181.51"/>
            <polygon fill="#b20000" stroke="#b20000" stroke-width="5" points="480.38,-181.44 476,-171.44 471.63,-181.44 480.38,-181.44"/>
        </a>
        </g>
        <g id="a_edge2&#45;label"><a xlink:title="testing.(*B).runN &#45;&gt; test/entry.BenchmarkTrangle (540ms)">
            <text text-anchor="middle" x="496.42" y="-191.8" font-family="Times,serif" font-size="14.00"> 540ms</text>
        </a>
        </g>
    </g>
</g>
</g></svg>
